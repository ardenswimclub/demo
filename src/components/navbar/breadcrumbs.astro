---
import type { menuT } from '@/data/menus.ts';
import { withBase } from "@/utils/url";

const { menus, menuKey } = Astro.props;
const currentPath = Astro.url.pathname;

const base = import.meta.env.BASE_URL || '/';

let pathSansBase = currentPath.substring(base.length);

// if(pathSansBase.startsWith('/'))
//   pathSansBase=pathSansBase.substring(1);

const pieces = pathSansBase.split('/');

const menu : menuT = menus[menuKey];
const mainMenu = menus['main'];
const mainCrumb = {title: mainMenu.heading, path: mainMenu.path };

const crumbs = [  
  { title: menu.heading, path: menu.path },
];

let t = menu.items.filter(o=>o.path == pathSansBase).at(0);
if(t != null)
  crumbs.push({title: t.title ?? '', path: t.path});

if (menuKey != 'main')
  crumbs.unshift(mainCrumb);

//console.log({crumbs, pathSansBase, base, currentPath, pieces, menuKey});
---
{() => ( crumbs.length == 1 ? null : 
  <ul class="flex flex-wrap sm:hidden
    items-center justify-left items-center
    ml-2 mt-1">
    {crumbs.map((crumb, index)=> (
      <li class="m-0">
        <a href={withBase(crumb.path)}>{crumb.title}</a>
        {index == crumbs.length -1 ? null : 
          <span class="mx-3"> &gt; </span>
        }
      </li>
    ))}
  </ul>
)}